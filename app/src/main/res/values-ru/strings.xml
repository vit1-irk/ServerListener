<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">ServerListener</string>
    <string name="title_activity_help">Справка</string>
    <string name="title_activity_settings">Другие настройки</string>
    <string name="settings_string">Настройки</string>
    <string name="clear_cache_string">Очистить кэш</string>
    <string name="help_string">Справка</string>
    <string name="service_toggle_state_string">Включить службу</string>
    <string name="working_protocol_string">Протокол работы:</string>
    <string name="server_address_string">Адрес сервера:</string>
    <string name="time_interval_string">Интервал времени в минутах:</string>
    <string name="custom_action_string">Действие при нажатии на уведомление:</string>
    <string name="choose_string">Выбрать</string>
    <string name="apply_settings_string">Применить параметры</string>
    <string name="vibrate_pref_string">Вибрация в уведомлениях</string>
    <string name="errors_behaviour_summary">Или при отсутствии интернета</string>
    <string name="ts_id_summary">Нужен серверу для определения следующих данных</string>

    <string-array name="errors_behaviour">
        <item>Ничего не делать (по умолчанию)</item>
        <item>Кидать уведомление</item>
    </string-array>
    <string name="errors_behaviour_pref_string">Поведение при ошибках</string>
    <string name="ts_id_pref_string">Текущий ID для JSON-API</string>
    <string name="action_none">Ничего не выбрал...</string>
    <string name="cache_clear_done">Кэш очищен</string>
    <string name="cant_run_custom_action">Не могу запустить выбранное действие</string>
    <string name="new_action">Новое действие</string>
    <string name="new_messages">Новые сообщения: </string>
    <string name="server_address_typo">Что-то не так с адресом сервера!</string>
    <string name="service_restart">ServerListener (пере)запускается</string><string name="large_text">ServerListener - это приложение для получения уведомлений со своего сервера (например, для отслеживания ботов).\n
Алгоритм его работы прост: стучится раз в N минут на указанный сервер (используя AlarmManager). Если находит что-то новое, то выводит оповещение. Поддерживаются 2 протокола и настраиваемые действия при нажатии на уведомление (гарантируется работа в связке с приложением Termux).\n\n

Github репозиторий: <a href="https://github.com/vit1-irk/ServerListener">https://github.com/vit1-irk/ServerListener</a>\n\n

Поддерживаемые API:\n\n

<b>/x/c</b>\n\n

Одно из расширений протокола обмена технологии IDEC (<a href="https://ii-net.tk/idec-doc/">https://ii-net.tk/idec-doc/</a>). Узнать подробнее (+ описание схемы): <a href="https://ii-net.tk/idec-doc/?p=extensions">https://ii-net.tk/idec-doc/?p=extensions</a>\n\n

Нужен для отслеживания новых сообщений на конкретной ноде/станции. Через дополнительное действие можно настроить открытие клиента IDEC при нажатии на уведомление.\n\n

В строку адреса сервера требуется указать полный URL формата /x/c со всеми отслеживаемыми эхоконференциями. Например, <a href="http://spline.rooker.ru/ii/ii-point.php?q=/x/c/pipe.2032/ii.test.14/mlp.15">http://spline.rooker.ru/ii/ii-point.php?q=/x/c/pipe.2032/ii.test.14/mlp.15</a>\n\n

<b>JSON API</b>\n\n

Велосипед, который пригодится всем остальным пользователям для своих ботов. Для получения новых уведомлений использует числовой ID (см. настройки), который увеличивается на стороне сервера при поступлении новых данных.\n\n

Описание формата и рабочий образец сервера на Common Lisp - в корне Git репозитория.\n\n

По умолчанию ServerListener отсылает ID через POST-параметр ts_id, но возможно и подставить его в GET-запрос, указав в нужном месте строки адреса {ts_id}\n\n</string>
</resources>